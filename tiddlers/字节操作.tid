created: 20220624092537973
creator: Lconfident
modified: 20220628102405892
modifier: Lconfident
tags: [[Java IO]]
title: 字节操作
type: text/vnd.tiddlywiki

''装饰者模式''

Java I/O 使用了装饰者模式来实现。以 InputStream 为例，

* InputStream 是抽象组件；
* FileInputStream 是 InputStream 的子类，属于具体组件，提供了字节流的输入操作；
* FilterInputStream 属于抽象装饰者，装饰者用于装饰组件，为组件提供额外的功能。例如BufferedInputStream 为 FileInputStream 提供缓存的功能。

> 实例化一个具有缓存功能的字节流对象时，只需要在 FileInputStream 对象上再套一层BufferedInputStream 对象即可。

```java
FileInputStream fileInputStream = new FileInputStream(filePath);
BufferedInputStream bufferedInputStream = new
BufferedInputStream(fileInputStream);
```

> DataInputStream 装饰者提供了对更多数据类型进行输入的操作，比如 int、double 等基本类型。
