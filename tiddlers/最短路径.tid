created: 20220716070129691
creator: Lconfident
modified: 20220716105728676
modifier: Lconfident
tags: matlab算法
title: 最短路径
type: text/vnd.tiddlywiki

从A到B，总路径最短
[img[069.png]]

*最短路径：从哪个图中的某个顶点出发，到达另一个顶点的所经过的边的''权重之和最小''的一条路径
**图：''边''和''节点''组成的结构。
**边带有方向的是''有向图''，否则为无向图。
**权重：每条边都有与之对应的值。

Matlab求解最短路径：Dijkstra算法，或Matlab的graphshortestpath函数

代码

```
sparse生成稀疏矩阵，也就是除了注明的几个元素之外，其他的全是0
sparse里第一个和第二个矩阵相同位置的元素值就是非零元素的索引（也就是对应节点）
W是每条边上的权值
W = [10,5,1,2,4,7,6,3,9,2]
DG = sparse([1,1,2,2,3,4,4,5,5,5],...
          [2,5,3,5,4,1,3,2,3,4],W)
dist是最短路径的值，path是最短路径的节点顺序
pred是到每一个节点的最短路径的终点前一个节点
[dist,path,pred]=graphshortestpath(DG,1,3)
biograph生成图对象；view显示该图
point_name=["城市1","城市2","城市3","城市4","城市5"]

h=view(biograph(DG,point_name,'ShowWeights','On'))
将最短路径的节点及边缘标记为红色并增加线宽
getedgesbynodeid得到图h的指定边的句柄
第一个参数是图，第二个是边的出点，第三个是边的入点
句柄确保能找到对应得东西
get查询图得属性，h.Notes(path)，'ID'得到图h中得最短路径的边
set设置图像属性
edges = getedgesbynodeid(h,get(h.Nodes(path),'ID'));
set(edges,'LineColor',[1 0 0])%RGB数值 红绿蓝
set(edgs,'LineWidth',2)

```